class CImport extends HTMLElement{constructor(){super()}connectedCallback(){"HEAD"!==this.parentElement.tagName&&document.head.appendChild(this)}}customElements.define("c-import",CImport);let CitronJS={};CitronJS.DyCache={},CitronJS.ObCache={},CitronJS.addEntry=function(e,t){let a=CitronJS.generateRand();for(;CitronJS.DyCache.hasOwnProperty(a);)a=CitronJS.generateRand();let r=new XMLSerializer;xmlDocAsString=r.serializeToString(e),CitronJS.DyCache[a]={file:xmlDocAsString,src:t};let n=e.getElementsByTagName("export");for(let i=0;i<n.length;i++){let l=n[i];CitronJS.ObCache[l.getAttribute("sample")]=a}},CitronJS.handleImports=async function(e){let t=await fetch(e);if(!t.ok)throw Error("[CitronJS]: Error fetching a component. Received status "+t.status);let a=await t.text(),r=new DOMParser,n=r.parseFromString(a,"application/xml");if(CitronJS.isSyntaxValid(n)){let i=n.getElementsByTagName("export");for(let l=0;l<i.length;l++){let o=i[l],s=o.getAttribute("sample");for(var c in CitronJS.ObCache)if(c==s){o.parentNode.removeChild(o);let m=n.getElementsByTagName("sample");for(let C=0;C<m.length;C++){let g=m[C];g.getAttribute("name")==s&&g.parentNode.removeChild(g)}}}n.getElementsByTagName("export")&&CitronJS.addEntry(n,e)}},CitronJS.isSyntaxValid=function(e){return!0},CitronJS.generateRand=function(){return Math.floor(1e5*Math.random()).toString().padStart(5,"0")},CitronJS.handleSample=async function(e){let t=e.getAttribute("name");if(CitronJS.ObCache.hasOwnProperty(t)){let a=CitronJS.ObCache[t];CitronJS.DyCache[a].hasOwnProperty("file")||await CitronJS.updateFile(a);let r=new DOMParser,n=r.parseFromString(CitronJS.DyCache[a].file,"application/xml"),i=n.getElementsByTagName("export"),l;for(let o=0;o<i.length;o++){let s=i[o];s.getAttribute("sample")==t&&(l=s)}let c=n.getElementsByTagName("sample"),m;for(let C=0;C<c.length;C++){let g=c[C];g.getAttribute("name")==t&&(m=g.innerHTML)}let h=m;if(l.getElementsByTagName("var")){let p=l.getElementsByTagName("var");for(let d=0;d<p.length;d++){let S=p[d],u=S.getAttribute("var");h.includes("{ "+u+" }")&&(e.hasAttribute(u)?h=h.replace(RegExp("\\{\\s*"+u+"\\s*\\}","g"),e.getAttribute(u)):S.hasAttribute("default")&&(h=h.replace(RegExp("\\{\\s*"+u+"\\s*\\}","g"),S.getAttribute("default"))))}}e.hasAttribute("keepWrapper")?e.innerHTML=h:e.outerHTML=h}},CitronJS.lazyQueue=function(){},CitronJS.updateFile=async function(e){let t=await fetch(CitronJS.DyCache[e].src),a=await t.text();CitronJS.DyCache[e].file=a},CitronJS.clearCache=function(){Object.keys(CitronJS.DyCache).forEach(e=>{CitronJS.DyCache[e].hasOwnProperty("file")&&delete CitronJS.DyCache[e].file})},document.addEventListener("DOMContentLoaded",async()=>{let e=document.head.getElementsByTagName("c-import");for(let t=0;t<e.length;t++){let a=e[t];a.hasAttribute("src")&&await CitronJS.handleImports(a.getAttribute("src"))}let r=document.getElementsByTagName("sample");for(let n=0;n<r.length;n++){let i=r[n];i.hasAttribute("name")&&await CitronJS.handleSample(i)}let l=new MutationObserver(callback);l.observe(document.documentElement||document.body,{attributes:!0,childList:!0,subtree:!0})});const callback=async function(e,t){for(let a of e)if("childList"===a.type)for(let r of a.addedNodes)void 0==r.tagName||("c-import"==r.tagName.toLowerCase()?r.hasAttribute("src")&&CitronJS.handleImports(r.getAttribute("src")):"sample"==r.tagName.toLowerCase()&&r.hasAttribute("name")&&CitronJS.handleSample(r));else if("attributes"===a.type){let n=a.target;"sample"===n.tagName.toLowerCase()&&CitronJS.handleSample(a.target)}};