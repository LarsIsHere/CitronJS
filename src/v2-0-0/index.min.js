class CImport extends HTMLElement{constructor(){super()}connectedCallback(){"HEAD"!==this.parentElement.tagName&&document.head.appendChild(this)}}customElements.define("c-import",CImport);let CitronJS={};CitronJS.DyCache={},CitronJS.ObCache={},CitronJS.addEntry=function(e,t){let a=CitronJS.generateRand();for(;CitronJS.DyCache.hasOwnProperty(a);)a=CitronJS.generateRand();let r=new XMLSerializer;xmlDocAsString=r.serializeToString(e),CitronJS.DyCache[a]={file:xmlDocAsString,src:t};let n=e.getElementsByTagName("export");for(let l=0;l<n.length;l++){let o=n[l];CitronJS.ObCache[o.getAttribute("sample")]=a}console.log(CitronJS.DyCache),console.log(CitronJS.ObCache)},CitronJS.handleImports=async function(e){let t=await fetch(e);if(!t.ok)throw Error("[CitronJS]: Error fetching a component. Received status "+t.status);let a=await t.text(),r=new DOMParser,n=r.parseFromString(a,"application/xml");if(CitronJS.isSyntaxValid(n)){let l=n.getElementsByTagName("export");for(let o=0;o<l.length;o++){let i=l[o],s=i.getAttribute("sample");for(var g in CitronJS.ObCache)if(g==s){i.parentNode.removeChild(i);let m=n.getElementsByTagName("sample");for(let c=0;c<m.length;c++){let C=m[c];C.getAttribute("name")==s&&C.parentNode.removeChild(C)}}}n.getElementsByTagName("export")&&CitronJS.addEntry(n,e)}},CitronJS.isSyntaxValid=function(e){return console.log("passed syntax"),!0},CitronJS.generateRand=function(){return Math.floor(1e5*Math.random()).toString().padStart(5,"0")},CitronJS.handleSample=async function(e){console.log("handling sample"),console.log(e);let t=e.getAttribute("name");if(CitronJS.ObCache.hasOwnProperty(t)){let a=CitronJS.ObCache[t];CitronJS.DyCache[a].hasOwnProperty("file")||await CitronJS.updateFile(a);let r=new DOMParser,n=r.parseFromString(CitronJS.DyCache[a].file,"application/xml"),l=n.getElementsByTagName("export"),o;for(let i=0;i<l.length;i++){let s=l[i];s.getAttribute("sample")==t&&(o=s)}let g=n.getElementsByTagName("sample"),m;for(let c=0;c<g.length;c++){let C=g[c];C.getAttribute("name")==t&&(m=C.innerHTML)}let h=m;if(o.getElementsByTagName("var")){let p=o.getElementsByTagName("var");for(let d=0;d<p.length;d++){let u=p[d],S=u.getAttribute("var");console.log(S),h.includes("{ "+S+" }")&&(e.hasAttribute(S)?h=h.replace(RegExp("\\{\\s*"+S+"\\s*\\}","g"),e.getAttribute(S)):u.hasAttribute("default")&&(h=h.replace(RegExp("\\{\\s*"+S+"\\s*\\}","g"),u.getAttribute("default"))))}}e.hasAttribute("keepWrapper")?e.innerHTML=h:(e.outerHTML=h,e.outerHTML="<p>hello</p>")}},CitronJS.lazyQueue=function(){},CitronJS.updateFile=async function(e){let t=await fetch(CitronJS.DyCache[e].src),a=await t.text();CitronJS.DyCache[e].file=a},CitronJS.clearCache=function(){Object.keys(CitronJS.DyCache).forEach(e=>{CitronJS.DyCache[e].hasOwnProperty("file")&&delete CitronJS.DyCache[e].file})},document.addEventListener("DOMContentLoaded",async()=>{let e=document.head.getElementsByTagName("c-import");for(let t=0;t<e.length;t++){let a=e[t];a.hasAttribute("src")&&(await CitronJS.handleImports(a.getAttribute("src")),console.log("domload import passed. "+a))}let r=document.getElementsByTagName("sample");for(let n=0;n<r.length;n++){let l=r[n];l.hasAttribute("name")&&(await CitronJS.handleSample(l),console.log("domload sample passed. "+l))}let o=new MutationObserver(callback);o.observe(document.documentElement||document.body,{attributes:!0,childList:!0,subtree:!0})});const callback=async function(e,t){for(let a of e)if("childList"===a.type)for(let r of a.addedNodes)void 0==r.tagName||("c-import"==r.tagName.toLowerCase()?r.hasAttribute("src")&&CitronJS.handleImports(r.getAttribute("src")):"sample"==r.tagName.toLowerCase()&&r.hasAttribute("name")&&CitronJS.handleSample(r));else if("attributes"===a.type){let n=a.target;console.log("attributes ch"),"sample"===n.tagName.toLowerCase()&&(console.log(`Attribute ${a.attributeName} changed on <a> element.`),CitronJS.handleSample(a.target))}};