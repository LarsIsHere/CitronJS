class CImport extends HTMLElement{constructor(){super()}connectedCallback(){"HEAD"!==this.parentElement.tagName&&document.head.appendChild(this)}}customElements.define("c-import",CImport);let CitronJS={DyCache:{},ObCache:{},addEntry:function(t,e){let a=CitronJS.generateRand();for(;CitronJS.DyCache.hasOwnProperty(a);)a=CitronJS.generateRand();const n=new XMLSerializer;xmlDocAsString=n.serializeToString(t),CitronJS.DyCache[a]={file:xmlDocAsString,src:e};const r=t.getElementsByTagName("export");for(let t=0;t<r.length;t++){const e=r[t];CitronJS.ObCache[e.getAttribute("sample")]=a}},handleImports:async function(t){const e=await fetch(t);if(!e.ok)throw new Error("[CitronJS]: Error fetching a component. Received status "+e.status);const a=await e.text(),n=(new DOMParser).parseFromString(a,"application/xml");if(CitronJS.isSyntaxValid(n)){const e=n.getElementsByTagName("export");for(let t=0;t<e.length;t++){const a=e[t],o=a.getAttribute("sample");for(var r in CitronJS.ObCache)if(r==o){a.parentNode.removeChild(a);const t=n.getElementsByTagName("sample");for(let e=0;e<t.length;e++){const a=t[e];a.getAttribute("name")==o&&a.parentNode.removeChild(a)}}}n.getElementsByTagName("export")&&CitronJS.addEntry(n,t)}},isSyntaxValid:function(t){return!0},generateRand:function(){return Math.floor(1e5*Math.random()).toString().padStart(5,"0")},handleSample:async function(t){const e=t.getAttribute("name");if(CitronJS.ObCache.hasOwnProperty(e)){const a=CitronJS.ObCache[e];CitronJS.DyCache[a].hasOwnProperty("file")||await CitronJS.updateFile(a);const n=(new DOMParser).parseFromString(CitronJS.DyCache[a].file,"application/xml"),r=n.getElementsByTagName("export");let o;for(let t=0;t<r.length;t++){const a=r[t];a.getAttribute("sample")==e&&(o=a)}const i=n.getElementsByTagName("sample");let s;for(let t=0;t<i.length;t++){const a=i[t];a.getAttribute("name")==e&&(s=a.innerHTML)}let l=s;if(o.getElementsByTagName("var")){const e=o.getElementsByTagName("var");for(let a=0;a<e.length;a++){const n=e[a],r=n.getAttribute("var");l.includes("{ "+r+" }")&&(t.hasAttribute(r)?l=l.replace(new RegExp("\\{\\s*"+r+"\\s*\\}","g"),t.getAttribute(r)):n.hasAttribute("default")&&(l=l.replace(new RegExp("\\{\\s*"+r+"\\s*\\}","g"),n.getAttribute("default"))))}}t.hasAttribute("keepWrapper")?t.innerHTML=l:t.outerHTML=l}},lazyQueue:function(){},updateFile:async function(t){const e=await fetch(CitronJS.DyCache[t].src),a=await e.text();CitronJS.DyCache[t].file=a},clearCache:function(){Object.keys(CitronJS.DyCache).forEach((t=>{CitronJS.DyCache[t].hasOwnProperty("file")&&delete CitronJS.DyCache[t].file}))}};document.addEventListener("DOMContentLoaded",(async()=>{const t=document.head.getElementsByTagName("c-import");for(let e=0;e<t.length;e++){const a=t[e];a.hasAttribute("src")&&await CitronJS.handleImports(a.getAttribute("src"))}const e=document.getElementsByTagName("sample");for(let t=0;t<e.length;t++){const a=e[t];a.hasAttribute("name")&&await CitronJS.handleSample(a)}new MutationObserver(callback).observe(document.documentElement||document.body,{attributes:!0,childList:!0,subtree:!0})}));const callback=async function(t,e){for(let e of t)if("childList"===e.type)for(let t of e.addedNodes)null==t.tagName||("c-import"==t.tagName.toLowerCase()?t.hasAttribute("src")&&CitronJS.handleImports(t.getAttribute("src")):"sample"==t.tagName.toLowerCase()&&t.hasAttribute("name")&&CitronJS.handleSample(t));else if("attributes"===e.type){"sample"===e.target.tagName.toLowerCase()&&CitronJS.handleSample(e.target)}};