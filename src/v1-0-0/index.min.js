class CImport extends HTMLElement{constructor(){super()}connectedCallback(){"HEAD"!==this.parentElement.tagName&&document.head.appendChild(this)}}customElements.define("c-import",CImport);let CitronJSDynamicCache=[];function xmlChecklist(e,t){let r=new Map,a=e.getElementsByTagName("sample");for(let l=a.length-1;l>=0;l--){let n=a[l],i=n.getAttribute("name");r.has(i)?console.error(`[Citron]: Syntax Error in "${t}" -> Duplicate sample name "${i}" found.`):r.set(i,!0)}let o=new Set,s=e.getElementsByTagName("sample");for(let m=s.length-1;m>=0;m--){let g=s[m],h=g.getAttribute("name");o.has(h)?console.error(`[Citron]: Syntax Error in "${t}" -> Multiple occurrences of sample name "${h}" in one file.`):o.add(h)}let u=e.getElementsByTagName("export");for(let c=u.length-1;c>=0;c--){let p=u[c],d=e.getElementsByTagName("sample"),f=!1;for(let b=d.length-1;b>=0;b--)if(d[b].getAttribute("name")===p.getAttribute("sample")){f=!0;break}f||console.error(`[Citron]: Syntax Error in "${t}" -> "export" element "${p.getAttribute("sample")}" does not correspond to any "sample" element.`)}let C=e.getElementsByTagName("export");for(let y=C.length-1;y>=0;y--){let A=C[y];A.hasAttribute("default")&&!A.hasAttribute("var")&&console.error(`[Citron]: Syntax Error in "${t}" -> "export" element "${A.getAttribute("sample")}" has a "default" attribute but lacks a "var" attribute.`)}}document.addEventListener("DOMContentLoaded",async()=>{let e=document.head.getElementsByTagName("c-import");for(let t=0;t<e.length;t++){let r=e[t];try{let a=await fetch(r.getAttribute("src"));if(!a.ok)throw Error("[CitronJS]: Error fetching a component. Status: "+a.status);let l=await a.text(),n=new DOMParser,i=n.parseFromString(l,"text/html"),o=new XMLSerializer,s=o.serializeToString(i);CitronJSDynamicCache.push(s);for(var m=i.getElementsByTagName("parsererror"),g=m.length-1;g>=0;g--)m[g].parentNode.removeChild(m[g]);xmlChecklist(i,r.getAttribute("src"));let h=document.getElementsByTagName("sample");for(let u=h.length-1;u>=0;u--){let c=h[u];function p(e,t){let r=t.getAttribute("c-name"),a=e.getElementsByTagName("export"),l=[];for(let n=a.length-1;n>=0;n--)l.push(a[n].getAttribute("sample"));if(l.includes(r)){let i=e.getElementsByTagName("sample"),o=[];for(let s=i.length-1;s>=0;s--){let m=i[s];if(o.push(m.getAttribute("name")),o.includes(r)){let g=m;if(void 0!==g){let h=new DOMParser,u=g.innerHTML,c=[...a].find(e=>e.hasAttribute("sample")&&e.getAttribute("sample")===r);if(void 0!==c&&c.hasChildNodes()){let p=c.childNodes;for(let d=0;d<p.length;d++)if(child=p[d],"VAR"===child.tagName){let f=child.getAttribute("var");u.includes("{ "+f+" }")&&(t.hasAttribute(f)?u=u.replace(RegExp("\\{\\s*"+f+"\\s*\\}","g"),t.getAttribute(f)):child.hasAttribute("default")&&(u=u.replace(RegExp("\\{\\s*"+f+"\\s*\\}","g"),child.getAttribute("default"))))}}let b=h.parseFromString(u,"text/html");t.replaceWith(b.body.firstChild)}}}}}p(i,c)}}catch(d){console.error("[CitronJS]: "+d)}}let f=async function(e,t){for(let r of e)if("childList"===r.type){for(let a of r.addedNodes)if("c-import"===a.tagName.toLowerCase()){console.log('Element with tag "sample" added:',a);let l=await fetch(a.getAttribute("src"));if(!l.ok)throw Error("[CitronJS]: Error fetching a component. Status: "+l.status);let n=await l.text(),i=new DOMParser,o=i.parseFromString(n,"text/html");for(var s=o.getElementsByTagName("parsererror"),m=s.length-1;m>=0;m--)s[m].parentNode.removeChild(s[m]);let g=new XMLSerializer,h=g.serializeToString(o);CitronJSDynamicCache.push(h),xmlChecklist(o,a.getAttribute("src"))}else if("sample"===a.tagName.toLowerCase()){let u=a,c=u.getAttribute("c-name");console.log(c);let d=null;if(CitronJSDynamicCache.forEach(e=>{let t=new DOMParser,r=t.parseFromString(e,"text/html"),a=r.getElementsByTagName("export");for(let l=0;l<a.length;l++){let n=a[l];n.hasAttribute("sample")&&n.getAttribute("sample")===c&&(d=r,console.log(d))}}),null!==d){let f=d;console.log(f),p(f,u),console.log("hi")}}}},b=new MutationObserver(f);b.observe(document.documentElement||document.body,{childList:!0,subtree:!0})});